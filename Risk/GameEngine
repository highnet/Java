import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.FileNotFoundException;

/*
 *
 *
 *
 */


public class GameEngine extends JPanel implements MouseListener, MouseMotionListener, ActionListener {


    public Territory currentlySelected = null;
    public String currentlySelectedName = "";
    Timer timer = new Timer(16, this);
    PlayField gameData;


    public GameEngine() {

        gameData = new PlayField();

        try {
            File mapData = new File("/Users/bokense1/Desktop/Risk 2/src/world.map");
            gameData.loadData(mapData);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        System.out.println("[Dev] Done loading gamedata");


        addMouseListener(this);
        addMouseMotionListener(this);

        timer.start();


    }


    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        // needs a polygon array.

        g.setColor(Color.blue);
        g.fillRect(0, 0, 1650, 650);


        for (int i = 0; i < gameData.territory.size(); i++) {
            gameData.territory.get(i).printTerritory(g, "fill", currentlySelectedName);

        }
        for (int i = 0; i < gameData.territory.size(); i++) {
            gameData.territory.get(i).printTerritory(g, "outline", currentlySelectedName);
        }

        for (int i = 0; i < gameData.territory.size(); i++) {
            gameData.territory.get(i).printTerritoryCapital(g);
        }

        for (int i = 0; i < gameData.territory.size(); i++) {
            g.setColor(Color.BLACK);
            g.drawString(" " + gameData.territory.get(i).getArmyCount(), (int) gameData.territory.get(i).getCapital().getX(), (int) gameData.territory.get(i).getCapital().getY());


        }


    }


    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == timer) {
            repaint();
        }

    }

    @Override
    public void mouseClicked(MouseEvent e) {

        int x = e.getX();
        int y = e.getY();


        System.out.println("Click:" + x + "," + y);

        // if currentlyselected == null
        // if click polygon -> currentlyselected


        for (int i = 0; i < gameData.territory.size(); i++) {
            if (gameData.territory.get(i).check_isInsideTerritory(x, y)) {
                System.out.println("Clicked on " + gameData.territory.get(i).getName());
                currentlySelected = gameData.territory.get(i);
                currentlySelectedName = currentlySelected.getName();
                currentlySelected.addArmy(1);
                break;
            }
        }


    }


    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    @Override
    public void mouseDragged(MouseEvent e) {

    }

    @Override
    public void mouseMoved(MouseEvent e) {

    }
}
